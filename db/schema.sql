--
-- File generated with SQLiteStudio v3.2.1 on sri vlj 24 14:16:17 2021
--
-- Text encoding used: System
--
PRAGMA journal_mode = WAL;

PRAGMA foreign_keys = off;

BEGIN TRANSACTION;

-- Table: crop
CREATE TABLE IF NOT EXISTS crop (id INTEGER PRIMARY KEY NOT NULL);

-- Table: days
CREATE TABLE IF NOT EXISTS days (
  id INTEGER PRIMARY KEY NOT NULL,
  combo INTEGER UNIQUE,
  year INTEGER,
  month INTEGER,
  day INTEGER,
  UNIQUE (year, month, day)
);

-- Table: dlink
CREATE TABLE IF NOT EXISTS dlink (id INTEGER PRIMARY KEY NOT NULL);

-- Table: names
CREATE TABLE IF NOT EXISTS names (
  id INTEGER PRIMARY KEY NOT NULL,
  name STRING UNIQUE ON CONFLICT IGNORE
);

-- Table: pImg
CREATE TABLE IF NOT EXISTS pImg (
  id INTEGER PRIMARY KEY NOT NULL,
  pObj INTEGER REFERENCES pObj (id) ON DELETE CASCADE ON UPDATE CASCADE,
  t_start INTEGER,
  t_end INTEGER,
  duration INTEGER,
  day INTEGER REFERENCES days (id) ON DELETE CASCADE ON UPDATE CASCADE,
  imageName INTEGER REFERENCES names (id) ON DELETE RESTRICT ON UPDATE CASCADE,
  channelName INTEGER REFERENCES names (id) ON DELETE RESTRICT ON UPDATE CASCADE,
  numSteps INTEGER,
  numErrors INTEGER,
  inspectID INTEGER,
  threadID INTEGER,
  error STRING,
  UNIQUE (t_start, imageName, channelName)
);

-- Table: pIns
CREATE TABLE IF NOT EXISTS pIns (
  id INTEGER PRIMARY KEY NOT NULL,
  pImg INTEGER REFERENCES pImg (id) ON DELETE CASCADE ON UPDATE CASCADE,
  t_start INTEGER,
  day INTEGER REFERENCES days (id) ON DELETE CASCADE ON UPDATE CASCADE,
  imageName INTEGER REFERENCES names (id) ON DELETE RESTRICT ON UPDATE CASCADE,
  channelName INTEGER REFERENCES names (id) ON DELETE RESTRICT ON UPDATE CASCADE,
  userName INTEGER REFERENCES names (id) ON DELETE RESTRICT ON UPDATE CASCADE,
  inspectAction INTEGER REFERENCES names (id) ON DELETE RESTRICT ON UPDATE CASCADE,
  psTime INTEGER,
  calcTime INTEGER,
  inspectID INTEGER,
  UNIQUE (t_start, userName, imageName, channelName)
);

-- Table: pObj
CREATE TABLE IF NOT EXISTS pObj (
  id INTEGER PRIMARY KEY NOT NULL,
  t_start INTEGER NOT NULL ON CONFLICT FAIL,
  t_end INTEGER,
  duration INTEGER,
  day INTEGER REFERENCES days (id) ON DELETE CASCADE ON UPDATE CASCADE,
  objectName INTEGER REFERENCES names (id) ON DELETE RESTRICT ON UPDATE CASCADE NOT NULL ON CONFLICT FAIL,
  channelName INTEGER REFERENCES names (id) ON DELETE RESTRICT ON UPDATE CASCADE NOT NULL ON CONFLICT FAIL,
  numSteps INTEGER,
  numErrors INTEGER,
  error STRING,
  UNIQUE (t_start, objectName, channelName)
);

-- Table: purge
CREATE TABLE IF NOT EXISTS purge (
  id INTEGER PRIMARY KEY NOT NULL,
  t_start INTEGER,
  day INTEGER REFERENCES days (id) ON DELETE CASCADE ON UPDATE CASCADE,
  channelName INTEGER REFERENCES names (id) ON DELETE RESTRICT ON UPDATE CASCADE,
  folderName INTEGER REFERENCES names (id) ON DELETE RESTRICT ON UPDATE CASCADE,
  objectName INTEGER REFERENCES names (id) ON DELETE RESTRICT ON UPDATE CASCADE,
  error STRING
);

-- Table: route
CREATE TABLE IF NOT EXISTS route (
  id INTEGER PRIMARY KEY NOT NULL,
  t_start INTEGER,
  t_end INTEGER,
  duration INTEGER,
  day INTEGER REFERENCES days (id) ON DELETE CASCADE ON UPDATE CASCADE,
  objectName INTEGER REFERENCES names (id) ON DELETE RESTRICT ON UPDATE CASCADE,
  channelName INTEGER REFERENCES names (id) ON DELETE RESTRICT ON UPDATE CASCADE,
  error STRING
);

-- Table: files
CREATE TABLE IF NOT EXISTS files (
  id INTEGER PRIMARY KEY NOT NULL,
  hash STRING NOT NULL UNIQUE,
  lines INTEGER,
  firstLine STRING,
  firstDate INTEGER,
  lastLine STRING,
  lastDate INTEGER
);

-- Table: config
CREATE TABLE IF NOT EXISTS config (
  id INTEGER PRIMARY KEY,
  [key] STRING UNIQUE,
  value STRING
);

-- Index: name_index, days_combo_index, files_hash_index
CREATE INDEX IF NOT EXISTS name_index ON names (name);

CREATE INDEX IF NOT EXISTS days_combo_index ON days (combo);

CREATE INDEX IF NOT EXISTS files_hash_index ON files (hash);

COMMIT TRANSACTION;

PRAGMA foreign_keys = on;